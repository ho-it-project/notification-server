/**
 * @packageDocumentation
 * @module api.functional.string
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import { Fetcher } from "@nestia/fetcher";
import type { IConnection, Primitive } from "@nestia/fetcher";
import typia from "typia";
/**
 * @controller AppController.getNameTest()
 * @path GET /string/:name
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function getNameTest(connection: IConnection, name: string): Promise<getNameTest.Output>;
export declare namespace getNameTest {
    type Output = Primitive<string>;
    const METHOD: "GET";
    const PATH: string;
    const ENCRYPTED: Fetcher.IEncrypted;
    const path: (name: string) => string;
    const random: (g?: Partial<typia.IRandomGenerator>) => Output;
    const simulate: (connection: IConnection, name: string) => Promise<Output>;
}
